package unit1;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
	
	public Server() throws IOException {
		//// Step 1: Create a server socket, a regular socket
		// Create a server socket
		ServerSocket serverSocket = new ServerSocket(2020);
		System.out.println("Port 2020 is opened");
		// > Port 2020 khi tao ServerSocket la tuy y lua chon nhung dung chon nhung Port da duoc su dung trong Server roi
		
		// Create a regular socket
		Socket regularSocket = serverSocket.accept();
		System.out.println("Client " + regularSocket.getInetAddress() + " has connected");
		// > + accept() is blocking method which accepts incoming connections
		//	 + blocking method means Java will stop in the line 20 (line has accept() method) and Java is not going to
		//		 continue to go through the other lines until an incoming connection actually appears
		//	     and it is accepted
		// > + "Inet" viet tat cua "Internet"
		//	 + getInetAddress() retrieves the client's IP address from the Socket
				
	
		//// Step 2: Create I/O Buffers
		BufferedReader fromClient = new BufferedReader(new InputStreamReader(regularSocket.getInputStream()));
		// > Su dung cho luong du lieu dau vao tu client
		// > For incoming data and for outgoing data, a socket is like a door, we can come in or we can get out
		//		+ Su dung getInputStream(), ta se chon ra du lieu ta muon lay
		//		+ Neu du lieu vao rat nhieu thi se rat roi nen ta phai su dung InputStreamReader() de chuyen du lieu
		//			khong doc duoc thanh du lieu ta co the hieu
		//		+ BufferedReader() co tac dung nhu sau: server gui cho client 1 File (o day la 1 String) thi 
		//			- Buffer cua server se phai tich luy, khi Buffer cua server day thi luong data day moi duoc gui di va
		//				data trong File se giam xuong dong thoi Buffer cua server se quay ve 0 va tich luy lai tu dau.
		//			- Buffer cua client se phai tuy luy, khi Buffer cua client day thi data moi duoc doc de lay vao 
		//				va Buffer cua client se lai quay ve 0 de tich luy lai
		PrintWriter toClient = new PrintWriter(new OutputStreamWriter(regularSocket.getOutputStream()), true);
		// > used for outgoing stream of data which are all the messages that server sends to client
		// > CHU Y: PHAI SU DUNG DOI SO "true", neu khong se khong gui duoc tin di.
		// > Doi so "true" trong PrintWriter() co tac dung khi server gui message cho client thi co the se bi thua 1 it
		//		data trong server khong the chuyen di tiep duoc vi chung khong du kha nang lam day Buffer cua server nua 
		//		nen su dung doi so "true" de thong bao rang cu gui not File di khong quan trong luong data cuoi cung co 
		//		lam day Buffer cua server hay khong
		
		//// Step 3: Create message
		toClient.println("Welcome");
		// > Send "Welcome" to client
		// > Note: Always use println() method intead of using print() method
		String response = fromClient.readLine();
		System.out.println("Client " 
							+ regularSocket.getInetAddress() 
							+ " says: " + response);
		// > Get "Thanks" from client
		// > Note: Always use println() method intead of using print() method
		
		//// Step 4: Close Socket: Always have to close socket when the communication is over
		regularSocket.close();
		System.out.println("Socket is closed");
	}
	
	public static void main(String[] args) {
		try {
			new Server();
		} catch (IOException e) {
			e.printStackTrace();
		}
		// > Muon xem cuoc hoi thoai cua Server va Client thi:
		//		+ Bat dau chay class Server truoc
		//		+ Sau do chay class Client
		// 		+ Cuoi cung bam icon "Display selected console" (hinh cai man hinh TV ben phai man hinh console)
		//			de tiep tuc cuoc hoi thoain neu khong bam thi se chi thay loi thoai dau tien cua Server va Client thoi
		// > Su dung TcpView de huy port neu nhu muon chay lai lan tiep theo cho chinh port day vi nhu da noi o tren 
		//		Socket socket = serverSocket.accept(); se lam Java luon dung lai de doi den khi nao co 1 connection hop le duoc
		//		accept thi moi chay dong lenh tiep theo, neu khong thi no se mai dung o dong do va port do se khong bao h duoc dong
		//		ke ca ta tat chay console nen neu chay lan tiep theo vao chinh port do se bi loi vi port do dang doi connection hop le
		//		de accept chu khong can phai mo lai port nua
	}
	
}
